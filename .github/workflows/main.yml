# This is a basic workflow to help you get started with Actions

name: CI Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DATABASE_URL: 'postgresql://postgres:POSTGRES@localhost:5432/test_benchmarkpro?sslmode=verify-full&schema=public&connection_limit=5'
  ENVIRONMENT: 'test'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{matrix.os}}
    services:
      postgres:
        image: postgres:14.4-alpine
        env:
          NODE_ENV: development
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: POSTGRES
          POSTGRES_DB: test_benchmarkpro
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
      - name: Install dependencies
        run: npm install

      - name: Run Migrations
        env: # Or as an environment variable
          DATABASE_URL: ${{ env.DATABASE_URL }}
          ENVIRONMENT: 'test'
        run: npx prisma migrate deploy

      - name: Run Unit Test
        env: # Or as an environment variable
          DATABASE_URL: ${{ env.DATABASE_URL }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
        run: npm run test
